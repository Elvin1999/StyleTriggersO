<Window x:Class="WpfApp2.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:WpfApp2"
        mc:Ignorable="d"
        Title="MainWindow" Height="450" Width="800">
    <Window.Resources>
        <Style x:Key="blackButton" TargetType="Button" >
            <Setter Property="Background" Value="MistyRose" ></Setter>
            <Setter Property="Foreground" Value="White" ></Setter>
            <Setter Property="FontSize" Value="30" ></Setter>
            <Setter Property="FontFamily" Value="Comic Sans MS" ></Setter>
            <Setter Property="Margin" Value="10" ></Setter>
        </Style>


        <Style x:Key="goldButton" TargetType="Button" >
            <Setter Property="Background" Value="Black" ></Setter>
            <Setter Property="Foreground" Value="Gold" ></Setter>
            <Setter Property="FontSize" Value="30" ></Setter>
            <Setter Property="FontFamily" Value="Verdana" ></Setter>
            <Setter Property="Margin" Value="10" ></Setter>
            <Setter Property="Height" Value="50" ></Setter>

            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True" >
                    <Setter Property="Background" Value="Gold" ></Setter>
                    <Setter Property="Foreground" Value="Black" ></Setter>
                    <Setter Property="Height" Value="75" ></Setter>
                </Trigger>
            </Style.Triggers>

        </Style>


        <Style x:Key="StackOverFlow" TargetType="{x:Type Button}">
            <Setter Property="Background" Value="#373737" />
            <Setter Property="Foreground" Value="White" />
            <Setter Property="FontSize" Value="15" />
            <Setter Property="SnapsToDevicePixels" Value="True" />

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border CornerRadius="4" Background="{TemplateBinding Background}">
                            <Grid>
                                <Path x:Name="PathIcon" Width="15" Height="25" Stretch="Fill" Fill="#4C87B3" HorizontalAlignment="Left" Margin="17,0,0,0" Data="F1 M 30.0833,22.1667L 50.6665,37.6043L 50.6665,38.7918L 30.0833,53.8333L 30.0833,22.1667 Z "/>
                                <ContentPresenter x:Name="MyContentPresenter" Content="{TemplateBinding Content}" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,0,0,0" />
                            </Grid>
                        </Border>

                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="#E59400" />
                                <Setter Property="Foreground" Value="White" />
                                <Setter TargetName="PathIcon" Property="Fill" Value="Black" />
                                <Setter Property="Cursor"  Value="Hand"></Setter>
                            </Trigger>

                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" Value="OrangeRed" />
                                <Setter Property="Foreground" Value="White" />
                                <Setter TargetName="PathIcon" Property="Fill" Value="Yellow" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>




        <Style x:Key="MyFocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Control}">
                        <Grid Margin="3 2">
                            <Rectangle Name="r1" StrokeThickness="1" Stroke="Black" StrokeDashArray="2 2"/>
                            <Border Name="border" Width="{TemplateBinding ActualWidth}" Height="{TemplateBinding ActualHeight}"  CornerRadius="2" BorderThickness="1" />
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>



        <Style x:Key="ShadowStyle">
            <Setter Property="Control.Foreground" Value="LightGray" />
        </Style>

        <Style x:Key="OrangeButton" TargetType="Button">
            <Setter Property="OverridesDefaultStyle" Value="True"/>
            <Setter Property="Margin" Value="2"/>
            <Setter Property="FontFamily" Value="Verdana"/>
            <Setter Property="FontSize" Value="11px"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="FocusVisualStyle" Value="{StaticResource MyFocusVisual}" />
            <Setter Property="Background" >
                <Setter.Value>
                    <LinearGradientBrush StartPoint="0,0" EndPoint="0,1" >
                        <GradientStop Color="#FFFFD190" Offset="0.2"/>
                        <GradientStop Color="Orange" Offset="0.85"/>
                        <GradientStop Color="#FFFFD190" Offset="1"/>
                    </LinearGradientBrush>
                </Setter.Value>
            </Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Name="border" 
                        BorderThickness="1"
                        Padding="4,2" 
                        BorderBrush="DarkGray" 
                        CornerRadius="3" 
                        Background="{TemplateBinding Background}">
                            <Grid >
                                <ContentPresenter HorizontalAlignment="Center" 
                                       VerticalAlignment="Center" Name="contentShadow" 
                            Style="{StaticResource ShadowStyle}">
                                    <ContentPresenter.RenderTransform>
                                        <TranslateTransform X="1.0" Y="1.0" />
                                    </ContentPresenter.RenderTransform>
                                </ContentPresenter>
                                <ContentPresenter HorizontalAlignment="Center" 
                                    VerticalAlignment="Center" Name="content"/>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="BorderBrush" Value="#FF4788c8" />
                                <Setter Property="Foreground" Value="#FF4788c8" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" >
                                    <Setter.Value>
                                        <LinearGradientBrush StartPoint="0,0" EndPoint="0,1" >
                                            <GradientStop Color="Red" Offset="0.35"/>
                                            <GradientStop Color="Orange" Offset="0.95"/>
                                            <GradientStop Color="Red" Offset="1"/>
                                        </LinearGradientBrush>
                                    </Setter.Value>
                                </Setter>
                                <Setter TargetName="content" Property="RenderTransform" >
                                    <Setter.Value>
                                        <TranslateTransform Y="1.0" />
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                            <Trigger Property="IsDefaulted" Value="True">
                                <Setter TargetName="border" Property="BorderBrush" Value="#FF282828" />
                            </Trigger>
                            <Trigger Property="IsFocused" Value="True">
                                <Setter TargetName="border" Property="BorderBrush" Value="#FF282828" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter TargetName="border" Property="Opacity" Value="0.7" />
                                <Setter Property="Foreground" Value="Gray" />
                            </Trigger>



                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

    </Window.Resources>
    <Grid>

        <!--<StackPanel>

            <Button Style="{StaticResource blackButton}" >Salam</Button>
            <Button Width="200" Height="60" Style="{StaticResource StackOverFlow}" >Salam</Button>
            <Button Style="{StaticResource goldButton}" >Salam</Button>
            <Button Width="200" Height="60" Style="{StaticResource OrangeButton}" >Hello</Button>
        </StackPanel>-->

        


        <!--<StackPanel HorizontalAlignment="Center" VerticalAlignment="Center">
            <CheckBox Name="checkBox" Content="Hello World" ></CheckBox>
            <TextBlock HorizontalAlignment="Center" Margin="0,20,0,0" FontSize="48" >
                <TextBlock.Style>
                    <Style TargetType="TextBlock" >
                        <Setter Property="Text" Value="No" ></Setter>
                        <Setter Property="Foreground" Value="Red" ></Setter>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding ElementName=checkBox,Path=IsChecked}" Value="True" >
                                <Setter Property="Text" Value="Yes!" ></Setter>
                                <Setter Property="Foreground" Value="Green" ></Setter>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </TextBlock.Style>
            </TextBlock>
        </StackPanel>-->





        <!--<StackPanel HorizontalAlignment = "Center">
            <CheckBox x:Name = "redColorCheckBox" 
         Content = "Set red as foreground color" Margin = "20"/>

            <TextBlock Name = "txtblock" VerticalAlignment = "Center" 
         Text = "Event Trigger" FontSize = "24" Margin = "20">
                <TextBlock.Style>
                    <Style>
                        <Style.Triggers>
                            <DataTrigger Binding = "{Binding ElementName = redColorCheckBox, Path = IsChecked}" 
                     Value = "true">
                                <Setter Property = "TextBlock.Foreground" Value = "Red"/>
                                <Setter Property = "TextBlock.Cursor" Value = "Hand" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </TextBlock.Style>
            </TextBlock>
        </StackPanel>-->




        <!--<StackPanel HorizontalAlignment = "Center">
                <CheckBox Content="Yes" x:Name = "redColorCheckBox" 
          Margin = "20">

                </CheckBox>

                <TextBlock Name = "txtblock" VerticalAlignment = "Center" 
         Text = "Data Trigger" FontSize = "24" Margin = "20">
                    <TextBlock.Style>
                        <Style>
                            <Style.Triggers>
                                <DataTrigger Binding = "{Binding ElementName = redColorCheckBox, Path = IsChecked}" 
                     Value = "true">
                                    <Setter Property = "TextBlock.Foreground" Value = "Red"/>
                                    <Setter Property = "TextBlock.Cursor" Value = "Hand" />
                                </DataTrigger>

                            </Style.Triggers>
                        </Style>
                    </TextBlock.Style>
                </TextBlock>

            </StackPanel>-->



        <!--<TextBlock Background="LightBlue" Name="lblStyled" Text="Hello, styled world!" FontSize="18" HorizontalAlignment="Center" VerticalAlignment="Center">
            <TextBlock.Style>
                <Style TargetType="TextBlock">
                    <Style.Triggers>
                        <EventTrigger RoutedEvent="MouseEnter">
                            <EventTrigger.Actions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Duration="0:0:0.300" Storyboard.TargetProperty="FontSize" To="28" />
                                        
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger.Actions>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="MouseLeave">
                            <EventTrigger.Actions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Duration="0:0:0.800" Storyboard.TargetProperty="FontSize" To="18" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger.Actions>
                        </EventTrigger>
                    </Style.Triggers>
                </Style>
            </TextBlock.Style>
        </TextBlock>-->

        <Button Content = "Click Me" Width = "60" Height = "30">

            <Button.Triggers>
                <EventTrigger RoutedEvent = "Button.Click">
                    <EventTrigger.Actions>
                        <BeginStoryboard>
                            <Storyboard>

                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty = 
                           "Width" Duration = "0:0:4">
                                    <LinearDoubleKeyFrame Value = "60" KeyTime = "0:0:0"/>
                                    <LinearDoubleKeyFrame Value = "120" KeyTime = "0:0:1"/>
                                    <LinearDoubleKeyFrame Value = "200" KeyTime = "0:0:2"/>
                                    <LinearDoubleKeyFrame Value = "300" KeyTime = "0:0:3"/>
                                </DoubleAnimationUsingKeyFrames>

                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty = "Height" 
                           Duration = "0:0:4">
                                    <LinearDoubleKeyFrame Value = "30" KeyTime = "0:0:0"/>
                                    <LinearDoubleKeyFrame Value = "40" KeyTime = "0:0:1"/>
                                    <LinearDoubleKeyFrame Value = "80" KeyTime = "0:0:2"/>
                                    <LinearDoubleKeyFrame Value = "150" KeyTime = "0:0:3"/>
                                </DoubleAnimationUsingKeyFrames>

                            </Storyboard>
                        </BeginStoryboard>
                    </EventTrigger.Actions>
                </EventTrigger>
            </Button.Triggers>

        </Button>

    </Grid>
</Window>
